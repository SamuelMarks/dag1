// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package poset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import peers "github.com/SamuelMarks/dag1/src/peers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionType int32

const (
	TransactionType_PEER_ADD     TransactionType = 0
	TransactionType_PEER_REMOVE  TransactionType = 1
	TransactionType_POS_TRANSFER TransactionType = 2
)

var TransactionType_name = map[int32]string{
	0: "PEER_ADD",
	1: "PEER_REMOVE",
	2: "POS_TRANSFER",
}
var TransactionType_value = map[string]int32{
	"PEER_ADD":     0,
	"PEER_REMOVE":  1,
	"POS_TRANSFER": 2,
}

func (x TransactionType) String() string {
	return proto.EnumName(TransactionType_name, int32(x))
}
func (TransactionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type InternalTransaction struct {
	Type   TransactionType    `protobuf:"varint,1,opt,name=Type,json=type,enum=poset.TransactionType" json:"Type,omitempty"`
	Peer   *peers.PeerMessage `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	Amount uint64             `protobuf:"varint,3,opt,name=Amount,json=amount" json:"Amount,omitempty"`
}

func (m *InternalTransaction) Reset()                    { *m = InternalTransaction{} }
func (m *InternalTransaction) String() string            { return proto.CompactTextString(m) }
func (*InternalTransaction) ProtoMessage()               {}
func (*InternalTransaction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *InternalTransaction) GetType() TransactionType {
	if m != nil {
		return m.Type
	}
	return TransactionType_PEER_ADD
}

func (m *InternalTransaction) GetPeer() *peers.PeerMessage {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *InternalTransaction) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type BlockSignature struct {
	Validator []byte `protobuf:"bytes,1,opt,name=Validator,json=validator,proto3" json:"Validator,omitempty"`
	Index     int64  `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=Signature,json=signature" json:"Signature,omitempty"`
}

func (m *BlockSignature) Reset()                    { *m = BlockSignature{} }
func (m *BlockSignature) String() string            { return proto.CompactTextString(m) }
func (*BlockSignature) ProtoMessage()               {}
func (*BlockSignature) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BlockSignature) GetValidator() []byte {
	if m != nil {
		return m.Validator
	}
	return nil
}

func (m *BlockSignature) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *BlockSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type EventBody struct {
	Transactions         [][]byte               `protobuf:"bytes,1,rep,name=Transactions,json=transactions,proto3" json:"Transactions,omitempty"`
	InternalTransactions []*InternalTransaction `protobuf:"bytes,2,rep,name=InternalTransactions,json=internalTransactions" json:"InternalTransactions,omitempty"`
	Parents              [][]byte               `protobuf:"bytes,3,rep,name=Parents,json=parents,proto3" json:"Parents,omitempty"`
	Creator              []byte                 `protobuf:"bytes,4,opt,name=Creator,json=creator,proto3" json:"Creator,omitempty"`
	Index                int64                  `protobuf:"varint,5,opt,name=Index,json=index" json:"Index,omitempty"`
	BlockSignatures      []*BlockSignature      `protobuf:"bytes,6,rep,name=BlockSignatures,json=blockSignatures" json:"BlockSignatures,omitempty"`
}

func (m *EventBody) Reset()                    { *m = EventBody{} }
func (m *EventBody) String() string            { return proto.CompactTextString(m) }
func (*EventBody) ProtoMessage()               {}
func (*EventBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *EventBody) GetTransactions() [][]byte {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *EventBody) GetInternalTransactions() []*InternalTransaction {
	if m != nil {
		return m.InternalTransactions
	}
	return nil
}

func (m *EventBody) GetParents() [][]byte {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *EventBody) GetCreator() []byte {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *EventBody) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *EventBody) GetBlockSignatures() []*BlockSignature {
	if m != nil {
		return m.BlockSignatures
	}
	return nil
}

type EventMessage struct {
	Body                 *EventBody `protobuf:"bytes,1,opt,name=Body,json=body" json:"Body,omitempty"`
	Signature            string     `protobuf:"bytes,2,opt,name=Signature,json=signature" json:"Signature,omitempty"`
	SelfParentIndex      int64      `protobuf:"varint,3,opt,name=SelfParentIndex,json=selfParentIndex" json:"SelfParentIndex,omitempty"`
	OtherParentCreatorID uint64     `protobuf:"varint,4,opt,name=OtherParentCreatorID,json=otherParentCreatorID" json:"OtherParentCreatorID,omitempty"`
	OtherParentIndex     int64      `protobuf:"varint,5,opt,name=OtherParentIndex,json=otherParentIndex" json:"OtherParentIndex,omitempty"`
	CreatorID            uint64     `protobuf:"varint,6,opt,name=CreatorID,json=creatorID" json:"CreatorID,omitempty"`
	TopologicalIndex     int64      `protobuf:"varint,7,opt,name=TopologicalIndex,json=topologicalIndex" json:"TopologicalIndex,omitempty"`
	Hash                 []byte     `protobuf:"bytes,8,opt,name=Hash,json=hash,proto3" json:"Hash,omitempty"`
}

func (m *EventMessage) Reset()                    { *m = EventMessage{} }
func (m *EventMessage) String() string            { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()               {}
func (*EventMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *EventMessage) GetBody() *EventBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *EventMessage) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *EventMessage) GetSelfParentIndex() int64 {
	if m != nil {
		return m.SelfParentIndex
	}
	return 0
}

func (m *EventMessage) GetOtherParentCreatorID() uint64 {
	if m != nil {
		return m.OtherParentCreatorID
	}
	return 0
}

func (m *EventMessage) GetOtherParentIndex() int64 {
	if m != nil {
		return m.OtherParentIndex
	}
	return 0
}

func (m *EventMessage) GetCreatorID() uint64 {
	if m != nil {
		return m.CreatorID
	}
	return 0
}

func (m *EventMessage) GetTopologicalIndex() int64 {
	if m != nil {
		return m.TopologicalIndex
	}
	return 0
}

func (m *EventMessage) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Event struct {
	Message          *EventMessage `protobuf:"bytes,1,opt,name=Message,json=message" json:"Message,omitempty"`
	LamportTimestamp int64         `protobuf:"varint,2,opt,name=LamportTimestamp,json=lamportTimestamp" json:"LamportTimestamp,omitempty"`
	Frame            int64         `protobuf:"varint,3,opt,name=Frame,json=frame" json:"Frame,omitempty"`
	FlagTableBytes   []byte        `protobuf:"bytes,4,opt,name=FlagTableBytes,json=flagTableBytes,proto3" json:"FlagTableBytes,omitempty"`
	RootTableBytes   []byte        `protobuf:"bytes,5,opt,name=RootTableBytes,json=rootTableBytes,proto3" json:"RootTableBytes,omitempty"`
	Root             bool          `protobuf:"varint,6,opt,name=Root,json=root" json:"Root,omitempty"`
	Clotho           bool          `protobuf:"varint,7,opt,name=Clotho,json=clotho" json:"Clotho,omitempty"`
	Atropos          bool          `protobuf:"varint,8,opt,name=Atropos,json=atropos" json:"Atropos,omitempty"`
	AtroposTimestamp int64         `protobuf:"varint,9,opt,name=AtroposTimestamp,json=atroposTimestamp" json:"AtroposTimestamp,omitempty"`
	AtTimes          []int64       `protobuf:"varint,10,rep,packed,name=AtTimes,json=atTimes" json:"AtTimes,omitempty"`
	AtVisited        int64         `protobuf:"varint,11,opt,name=AtVisited,json=atVisited" json:"AtVisited,omitempty"`
	FrameReceived    int64         `protobuf:"varint,12,opt,name=FrameReceived,json=frameReceived" json:"FrameReceived,omitempty"`
	RecFrames        []int64       `protobuf:"varint,13,rep,packed,name=RecFrames,json=recFrames" json:"RecFrames,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Event) GetMessage() *EventMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event) GetLamportTimestamp() int64 {
	if m != nil {
		return m.LamportTimestamp
	}
	return 0
}

func (m *Event) GetFrame() int64 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func (m *Event) GetFlagTableBytes() []byte {
	if m != nil {
		return m.FlagTableBytes
	}
	return nil
}

func (m *Event) GetRootTableBytes() []byte {
	if m != nil {
		return m.RootTableBytes
	}
	return nil
}

func (m *Event) GetRoot() bool {
	if m != nil {
		return m.Root
	}
	return false
}

func (m *Event) GetClotho() bool {
	if m != nil {
		return m.Clotho
	}
	return false
}

func (m *Event) GetAtropos() bool {
	if m != nil {
		return m.Atropos
	}
	return false
}

func (m *Event) GetAtroposTimestamp() int64 {
	if m != nil {
		return m.AtroposTimestamp
	}
	return 0
}

func (m *Event) GetAtTimes() []int64 {
	if m != nil {
		return m.AtTimes
	}
	return nil
}

func (m *Event) GetAtVisited() int64 {
	if m != nil {
		return m.AtVisited
	}
	return 0
}

func (m *Event) GetFrameReceived() int64 {
	if m != nil {
		return m.FrameReceived
	}
	return 0
}

func (m *Event) GetRecFrames() []int64 {
	if m != nil {
		return m.RecFrames
	}
	return nil
}

func init() {
	proto.RegisterType((*InternalTransaction)(nil), "poset.InternalTransaction")
	proto.RegisterType((*BlockSignature)(nil), "poset.BlockSignature")
	proto.RegisterType((*EventBody)(nil), "poset.EventBody")
	proto.RegisterType((*EventMessage)(nil), "poset.EventMessage")
	proto.RegisterType((*Event)(nil), "poset.Event")
	proto.RegisterEnum("poset.TransactionType", TransactionType_name, TransactionType_value)
}

func init() { proto.RegisterFile("event.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 720 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0xdf, 0x6b, 0xfa, 0x48,
	0x14, 0xc5, 0x57, 0x13, 0x7f, 0xe4, 0x9a, 0x6a, 0x98, 0xba, 0x25, 0x94, 0x7d, 0x10, 0x29, 0x45,
	0x84, 0x2a, 0xb8, 0xcf, 0xcb, 0xa2, 0xad, 0xb2, 0x85, 0x6d, 0x2b, 0xa3, 0xf4, 0xb5, 0x8c, 0x71,
	0xd4, 0xb0, 0x49, 0x26, 0xcc, 0x8c, 0x65, 0x7d, 0xdc, 0xd7, 0xfd, 0x83, 0xf6, 0x61, 0xff, 0xba,
	0x2f, 0x73, 0x13, 0xdb, 0x28, 0xbe, 0x08, 0xf7, 0xdc, 0x3b, 0x67, 0xe6, 0x7c, 0x66, 0x0c, 0x34,
	0xf8, 0x27, 0x4f, 0xf4, 0x20, 0x95, 0x42, 0x0b, 0x52, 0x49, 0x85, 0xe2, 0xfa, 0xf6, 0xb7, 0x6d,
	0xa8, 0x77, 0xfb, 0xd5, 0x20, 0x10, 0xf1, 0x70, 0xc6, 0x12, 0x2d, 0xe2, 0x87, 0x8d, 0xd8, 0x27,
	0x6b, 0xa6, 0x43, 0x91, 0x0c, 0xb7, 0xe2, 0x21, 0x62, 0xc1, 0x8e, 0xab, 0x50, 0x0d, 0x95, 0x0c,
	0x86, 0x29, 0xe7, 0x52, 0xe1, 0x6f, 0xe6, 0xd2, 0xfd, 0xa7, 0x04, 0xd7, 0xcf, 0x89, 0xe6, 0x32,
	0x61, 0xd1, 0x52, 0xb2, 0x44, 0xb1, 0xc0, 0x2c, 0x24, 0x7d, 0xb0, 0x97, 0x87, 0x94, 0xfb, 0xa5,
	0x4e, 0xa9, 0xd7, 0x1c, 0xdd, 0x0c, 0x70, 0xb3, 0x41, 0x61, 0xc2, 0x74, 0xa9, 0xad, 0x0f, 0x29,
	0x27, 0xf7, 0x60, 0x1b, 0x47, 0xbf, 0xdc, 0x29, 0xf5, 0x1a, 0x23, 0x32, 0xc0, 0x4d, 0x06, 0x73,
	0xce, 0xe5, 0x0b, 0x57, 0x8a, 0x6d, 0x39, 0xc5, 0x3e, 0xb9, 0x81, 0xea, 0x38, 0x16, 0xfb, 0x44,
	0xfb, 0x56, 0xa7, 0xd4, 0xb3, 0x69, 0x95, 0x61, 0xd5, 0x5d, 0x41, 0x73, 0x12, 0x89, 0xe0, 0xaf,
	0x45, 0xb8, 0x4d, 0x98, 0xde, 0x4b, 0x4e, 0x7e, 0x01, 0xe7, 0x9d, 0x45, 0xe1, 0x9a, 0x69, 0x21,
	0xf1, 0x08, 0x2e, 0x75, 0x3e, 0x8f, 0x02, 0x69, 0x43, 0xe5, 0x39, 0x59, 0xf3, 0xbf, 0x71, 0x43,
	0x8b, 0x56, 0x42, 0x53, 0x98, 0x35, 0x5f, 0x06, 0xb8, 0x81, 0x43, 0x1d, 0x75, 0x14, 0xba, 0xff,
	0x96, 0xc1, 0x99, 0x1a, 0x7a, 0x13, 0xb1, 0x3e, 0x90, 0x2e, 0xb8, 0x85, 0x28, 0xca, 0x2f, 0x75,
	0xac, 0x9e, 0x4b, 0x5d, 0x5d, 0xd0, 0xc8, 0x2b, 0xb4, 0x2f, 0x80, 0x51, 0x7e, 0xb9, 0x63, 0xf5,
	0x1a, 0xa3, 0xdb, 0x9c, 0xc8, 0x85, 0x11, 0xda, 0x0e, 0x2f, 0xac, 0x23, 0x3e, 0xd4, 0xe6, 0x4c,
	0xf2, 0x44, 0x2b, 0xdf, 0xc2, 0xed, 0x6a, 0x69, 0x56, 0x9a, 0xce, 0xa3, 0xe4, 0x98, 0xd5, 0xc6,
	0xac, 0xb5, 0x20, 0x2b, 0xbf, 0x93, 0x56, 0x8a, 0x49, 0x7f, 0x87, 0xd6, 0x29, 0x2f, 0xe5, 0x57,
	0xf1, 0x50, 0x3f, 0xe7, 0x87, 0x3a, 0xed, 0xd2, 0xd6, 0xea, 0x74, 0xba, 0xfb, 0x7f, 0x19, 0x5c,
	0x84, 0x91, 0xdf, 0x0f, 0xb9, 0x03, 0xdb, 0x70, 0x41, 0xd4, 0x8d, 0x91, 0x97, 0xdb, 0x7c, 0xf1,
	0xa2, 0xf6, 0xca, 0x50, 0x3b, 0x21, 0x5c, 0x3e, 0x23, 0x4c, 0x7a, 0xd0, 0x5a, 0xf0, 0x68, 0x93,
	0x65, 0xcc, 0x4e, 0x6d, 0xe1, 0xa9, 0x5b, 0xea, 0x54, 0x26, 0x23, 0x68, 0xbf, 0xe9, 0x1d, 0x97,
	0x99, 0x96, 0x47, 0x7f, 0x7e, 0xc2, 0xf0, 0x36, 0x6d, 0x8b, 0x0b, 0x3d, 0xd2, 0x07, 0xaf, 0xb0,
	0xa6, 0x08, 0xc5, 0x13, 0x67, 0xba, 0x39, 0xe7, 0xb7, 0x69, 0x15, 0x4d, 0x9d, 0xa0, 0xe8, 0xb4,
	0x14, 0xa9, 0x88, 0xc4, 0x36, 0x0c, 0x58, 0x94, 0x39, 0xd5, 0x32, 0x27, 0x7d, 0xa6, 0x13, 0x02,
	0xf6, 0x1f, 0x4c, 0xed, 0xfc, 0x3a, 0x5e, 0x8b, 0xbd, 0x63, 0x6a, 0xd7, 0xfd, 0xcf, 0x82, 0x0a,
	0x92, 0x21, 0x0f, 0x50, 0xcb, 0x01, 0xe6, 0xe0, 0xae, 0x8b, 0xe0, 0x8e, 0x6f, 0xbf, 0x16, 0xe7,
	0x90, 0xfb, 0xe0, 0xfd, 0xc9, 0xe2, 0x54, 0x48, 0xbd, 0x0c, 0x63, 0xae, 0x34, 0x8b, 0xd3, 0xfc,
	0x05, 0x7b, 0xd1, 0x99, 0x6e, 0x2e, 0x7e, 0x26, 0x59, 0xcc, 0x73, 0x84, 0x95, 0x8d, 0x29, 0xc8,
	0x3d, 0x34, 0x67, 0x11, 0xdb, 0x2e, 0xd9, 0x2a, 0xe2, 0x93, 0x83, 0xe6, 0x2a, 0x7f, 0x2f, 0xcd,
	0xcd, 0x89, 0x6a, 0xe6, 0xa8, 0x10, 0xba, 0x30, 0x57, 0xc9, 0xe6, 0xe4, 0x89, 0x6a, 0xe2, 0x99,
	0x39, 0x64, 0x54, 0xa7, 0xb6, 0xe9, 0x9a, 0x3f, 0xe9, 0x63, 0x24, 0xf4, 0x4e, 0x20, 0x94, 0x3a,
	0xad, 0x06, 0x58, 0x99, 0x47, 0x3a, 0xd6, 0x52, 0xa4, 0x42, 0x21, 0x8d, 0x3a, 0xad, 0xb1, 0xac,
	0x34, 0xb9, 0xf2, 0xce, 0x77, 0x2e, 0x27, 0xcb, 0xc5, 0xce, 0xf4, 0xcc, 0x05, 0x4b, 0x1f, 0x3a,
	0x56, 0xcf, 0x32, 0x2e, 0x58, 0x9a, 0x4b, 0x1b, 0xeb, 0xf7, 0x50, 0x85, 0x9a, 0xaf, 0xfd, 0x06,
	0x2e, 0x77, 0xd8, 0x51, 0x20, 0x77, 0x70, 0x85, 0x3c, 0x28, 0x0f, 0x78, 0xf8, 0xc9, 0xd7, 0xbe,
	0x8b, 0x13, 0x57, 0x9b, 0xa2, 0x68, 0x3c, 0x28, 0x0f, 0x70, 0x50, 0xf9, 0x57, 0xe8, 0xef, 0xc8,
	0xa3, 0xd0, 0x9f, 0x40, 0xeb, 0xec, 0xfb, 0x45, 0x5c, 0xa8, 0xcf, 0xa7, 0x53, 0xfa, 0x31, 0x7e,
	0x7a, 0xf2, 0x7e, 0x22, 0x2d, 0x68, 0x60, 0x45, 0xa7, 0x2f, 0x6f, 0xef, 0x53, 0xaf, 0x44, 0x3c,
	0x70, 0xe7, 0x6f, 0x8b, 0x8f, 0x25, 0x1d, 0xbf, 0x2e, 0x66, 0x53, 0xea, 0x95, 0x57, 0x55, 0xfc,
	0x6a, 0xfe, 0xfa, 0x23, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xe2, 0x5b, 0x4b, 0x8a, 0x05, 0x00, 0x00,
}
